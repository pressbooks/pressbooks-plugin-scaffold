name: Run Standards & Tests
on:
  push:
    branches: [ dev ]
    tags:
      - '*.*.*'
  pull_request:
    branches: [ dev ]
jobs:
  tests:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        php: [ 8.1, 8.2 ]
        os: [ ubuntu-20.04 ]
        wordpress: [ 6.2, latest ]
        experimental: [ false ]
        include:
          - experimental: true
          - experimental: false
            php: 8.1
            wordpress: 6.2
    name: Test - PHP ${{ matrix.php }} - WP ${{ matrix.wordpress }}

    env:
      WP_VERSION: ${{ matrix.wordpress }}
      WP_MULTISITE: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start required services
        run: sudo systemctl start mysql.service

      - name: Cache Composer packages
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ matrix.php }}-php-${{ hashFiles('**/composer.lock') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: phpcs, composer
          coverage: pcov

      - name: Install PHP dependencies
        run: |
          export PATH="$HOME/.composer/vendor/bin:$PATH"
          composer install --no-interaction
          git clone --depth=1 https://github.com/pressbooks/pressbooks.git ../pressbooks
          cd ../pressbooks && composer install --no-dev
          cd ../pressbooks-plugin-scaffold

      - name: Run PHP CodeSniffer
        run: composer standards

      - name: Install WP tests
        run: bash bin/install-wp-tests.sh wordpress_test root root localhost ${{ matrix.wordpress }}

      - name: Run PHP Tests
        run: vendor/bin/phpunit
        if: matrix.experimental == true

      - name: Run PHP Tests and PCOV
        run: composer test-coverage
        if: matrix.experimental == false

      - name: Upload Coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash)
        if: matrix.experimental == false
